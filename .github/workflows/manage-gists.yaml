name: Maintain GitHub Gists
run-name: Maintain Gists run by ${{ github.actor }} on ${{ github.ref_name }}
description: |
  This workflow maintains GitHub Gists by creating, updating, or deleting them based on the provided input JSON file.
  It can be triggered manually or via a scheduled event.

on:
  workflow_dispatch:
    inputs:
      input_path:
        description: 'Path to the input JSON file'
        required: true
        default: 'gist-factory/all-gists.json'
        type: string
      output_path:
        description: 'Path to the output JSON file (optional)'
        required: false
        default: 'gist-factory/all-gists.json'
        type: string
      skip_existing:
        description: 'Skip items that already contain a gist_id'
        required: false
        default: true
        type: boolean
      dry_run:
        description: 'Show what would be done without making API calls'
        required: false
        default: false
        type: boolean
      debug:
        description: 'Enable debug output'
        required: false
        default: false
        type: boolean

jobs:
  maintain-gists:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Execute maintain_gists.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      working-directory: ${{ github.workspace }}/gist-factory
      run: |
        python maintain_gists.py \
          --input "${{ inputs.input_path }}" \
          ${{ inputs.output_path && format('--output "{0}"', inputs.output_path) || '' }} \
          ${{ inputs.skip_existing && '--skip-existing' || '' }} \
          ${{ inputs.dry_run && '--dry-run' || '' }} \
          ${{ inputs.debug && '--debug' || '' }}

    - name: Check for changes
      id: git-check
      run: |
        git diff --exit-code all_gists.json || echo "changes=true" >> $GITHUB_OUTPUT

    - name: Commit and push changes
      if: steps.git-check.outputs.changes == 'true' && !inputs.dry_run
      working-directory: gist-factory
      run: |
        git checkout -b feature/update-gists
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add all-gists.json gist-id.json
        git commit -m "Update gists via GitHub Actions [skip ci]"
        git push --set-upstream origin feature/update-gists
        git push

    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: gist-results
        path: |
          all_gists.json
          *.log
        retention-days: 30